TO DISCUSS
----------

Keyboard shortcuts

  * Next/Previous cluster: UP/DOWN
  
  * Merge/Split: M/S + icon
  
  * Change channel in FeatureView: CTRL+UP/DOWN for X, SHIFT+UP/DOWN for Y
  
  * Toggle overlay in WaveformView: O
  
  * Toggle spatial arrangement in WaveformView: G
  
  * Change box/probe scaling in WaveformView: 
  
  * Reset view in WaveformView/FeatureView: R   OK


Feature view

  * how to show mask (gray? transparency?) show it at all??

  * selection of masked spikes or not?
  
  
  (0,0) axes in feature view
  

Measure of cluster quality: ratio of mask/unmask on each channel
  
  
  
  * Automatic projection in FeatureView: P

  split with different clusters: split everything
  
  interaction buttons: shading
  
  
  button for resetting the view
  
  keep the old clu
  
  default groups: good, noise (SH DEL), multiunit (DEL) move to groups
  
  
  option to transiently recolor all clusters in one group with one color
  ON by default for MUA (white)
  
  low light: mask 
  
  possibility to t change the color of clusters permanently
  
  left arrow in cluster view to close group tree
  
  
  correlation matrix: later (lower priority)
  
  
  key => buttons
  
  XML file with metadata related to visualization
  load metadata from xml (sampling rzate, etc)
  
  no firing rate but n of spikes in clusterview
  
  
  
  ctrl + left click: highlighting not so transient, click to deactive highlighting
  
  selection of cluster: not bigger points in feature view, butr highlited
  and also in waveformview with signals
  
  
  
  
Metadata/user preferences: what to store in the data file, and in the user
preferences files? (eg waveform view scaling, arrangement, etc)



How to implement the automatic projection in the FeatureView?



Most efficient way of computing the correlation matrix?





TODO
----
  
  * waveform: unmasked at the top
  
    mean waveform
  
    feature view: selection does not select masked clusters
    (not high priority) option to totally hide features
  
  * function for automatic zoom in waveformview as a function of
    channels and clusters
    
    
  * cluster group renaming
  * featureview controller: buttons for channel up/down
  * keyboard shortcuts for probe/box rescaling in waveformview
  * small widget with text information (number of spikes, highlighted spikes...)
  * lightweight hdf5 text viewer
  * correlograms computation
  * refactoring correlograms: put the actual computations outside dataio
  * put COLORMAP in the data holder and remove dependencies 
  * factorize highlight logic in shaders  
  * cluster merge with button / M press
  * cluster split with button / S press
  * trace view
  * fetdim variable in controller widget (1 to ?)
  * transient recoloring
  * move data manager into templates, so that templates contain everything
  * force cleaning up of widgets upon closing
  * make sure the GUI work in IPython

