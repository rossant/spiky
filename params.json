{"name":"Spiky","tagline":"","body":"*Spiky* is the code name for the next-generation spike-sorting software \r\nadapted to high-channel count silicon probes. Written in Python, it aims at \r\nbeing flexible and extendable by the user.\r\n\r\nThe first step is to create a new semi-automatic graphical interface\r\n(code name: *KlustaViewa*) for\r\nthe manual stage that comes after the automatic clustering algorithms.\r\nThis interface automatically guides the user through similar clusters,\r\nshowing the most relevant feature projections, and asks him to make merge or\r\nsplit decisions. The goal is to make the manual stage more reliable, less\r\nerror-prone and quicker than what it currently is.\r\n\r\nThis interface is directly inspired from the current software suite \r\n[Klusters](http://klusters.sourceforge.net),\r\n[Neuroscope](http://neuroscope.sourceforge.net/)\r\nand\r\n[NDManager](http://ndmanager.sourceforge.net/),\r\ndeveloped in \r\n[GyÃ¶rgy Buzsaki's laboratory](http://www.buzsakilab.com/).\r\n\r\nGallery\r\n-------\r\n\r\n[![Screenshot 1](images/thumbnails/img0.png)](images/img0.png)\r\n[![Screenshot 2](images/thumbnails/img1.png)](images/img1.png)\r\n[![Screenshot 3](images/thumbnails/img2.png)](images/img2.png)\r\n\r\nInstallation\r\n------------\r\n\r\nThe software is still in developpement, but you can download an experimental\r\nversion here. The first step is to install the dependencies, the second\r\nstep is to install the software itself.\r\n\r\n\r\n### Dependencies\r\n  \r\nThe following libraries are required:\r\n  \r\n  * Python 2.7\r\n  * Numpy\r\n  * Pandas >= 0.10\r\n  * Matplotlib >= 1.1.1\r\n  * PyOpenGL >= 3.0.1\r\n  * either PyQt4 or PySide\r\n\r\nThere are two possibilities to install these dependencies.\r\n  \r\n#### Use an all-in-one Python distribution\r\n\r\nAll these dependencies are included in the \r\n[Enthought Python Distribution](http://www.enthought.com/products/epd.php) (EPD),\r\nwhich is free for academics.\r\n\r\n\r\n#### Install all packages one by one\r\n\r\nThis solution can be useful if you already have a Python installation and \r\nonly a few packages are missing.\r\n\r\n  * On Windows, [find the packages on this webpage](http://www.lfd.uci.edu/~gohlke/pythonlibs/).\r\n  * On OS X, find them on [Homebrew](http://mxcl.github.com/homebrew/) or [Macports](http://www.macports.org/)\r\n  * On Ubuntu, use `apt-get install` with the appropriate package name, which you can find [here](http://packages.ubuntu.com/).\r\n\r\n\r\n### Packages\r\n\r\nHere are the packages:\r\n\r\n  * [TGZ](http://spiky.rossant.net/spiky-0.1.0.dev.tar.gz)\r\n  * [ZIP](http://spiky.rossant.net/spiky-0.1.0.dev.zip)\r\n  * [Windows 64 bits](http://spiky.rossant.net/spiky-0.1.0.dev.win-amd64.exe)\r\n\r\nTo install Spiky:\r\n\r\n  * Make sure you've installed all dependencies.\r\n  * Download one of the packages above.\r\n  * Extract the package and do `python setup.py install`.\r\n\r\n### Development version\r\n\r\nUse this if you want to be able to update with `git pull` (you need git).\r\n\r\n  * Clone the repository:\r\n  \r\n        git clone https://github.com/rossant/spiky.git\r\n  \r\n  * Install Spiky with `pip` so that external packages are automatically\r\n    updated (like `qtools` which contains some Qt-related utility functions):\r\n  \r\n        pip install -r requirements.txt\r\n\r\n  \r\n### Test that Spiky is well installed\r\n  \r\nTo test that the installation went fine, type in a shell the following command:\r\n    \r\n    $ spiky\r\n    \r\nOn Windows, you may need to add `C:\\Python27\\Scripts` in the PATH variable,\r\nas [described here](http://geekswithblogs.net/renso/archive/2009/10/21/how-to-set-the-windows-path-in-windows-7.aspx).\r\n\r\n    ","google":"UA-6774000-4","note":"Don't delete this file! It's used internally to help with page regeneration."}